{"ast":null,"code":"var _jsxFileName = \"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffee-id/Coffee.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport DataContext from \"../../contexts/DataContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Details from \"./Details\";\nimport Cafe from \"./Cafe\";\nimport ReviewList from \"./ReviewList\";\nimport AddReview from \"./AddReview\";\nimport { getReviewsForCoffee, getFavouritesForCoffee, isLiked, isReviewed } from \"../../helpers/selectors\";\nimport classes from \"./Coffee.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Coffee(props) {\n  _s();\n\n  const params = useParams();\n  const coffeeId = Number(params.id);\n  const {\n    addFavourite,\n    deleteFavourite\n  } = props; // get all data\n\n  const {\n    state\n  } = useContext(DataContext);\n  const coffees = state.coffees;\n  const reviews = state.reviews;\n  const favourites = state.favourites; // filter for specific coffee details\n\n  const coffee = coffees[coffeeId]; // filter for coffee reviews & favourites\n\n  const [coffeeReviews, setCoffeeReviews] = useState(getReviewsForCoffee(Object.values(reviews), coffeeId));\n  const coffeeFavourites = getFavouritesForCoffee(Object.values(favourites), coffeeId); // change state everytime a review is added or deleted\n\n  useEffect(() => {\n    setCoffeeReviews(prev => getReviewsForCoffee(Object.values(reviews), coffeeId));\n  }, [reviews, coffeeId]); // check if coffee is already reviewed by user\n\n  const {\n    user\n  } = useContext(UserContext);\n  const userId = user ? user.id : null;\n  const [reviewed, setReviewed] = useState(false);\n  useEffect(() => {\n    setReviewed(prev => isReviewed(coffeeReviews, userId));\n  }, [coffeeReviews, userId]); // review form logic\n\n  const [openReviewForm, setOpenReviewForm] = useState(false); // cafe logic to be passed as props\n\n  const [cafeData, setCafeData] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: coffee && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Details, {\n        coffee: coffee,\n        reviews: coffeeReviews,\n        favourites: coffeeFavourites,\n        addFavourite: addFavourite,\n        deleteFavourite: deleteFavourite,\n        isLiked: isLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"coffee-cafe-section\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes[\"coffee-review-heading\"],\n          children: \"Featured Cafe for this Coffee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Cafe, {\n          cafeData: cafeData,\n          setCafeData: setCafeData,\n          coffee: coffee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"coffee-review-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes[\"coffee-review-heading\"],\n          children: \"Community Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"coffee-review-section\"],\n          children: [/*#__PURE__*/_jsxDEV(ReviewList, {\n            coffeeId: coffeeId,\n            coffee: coffee,\n            openReviewForm: openReviewForm,\n            setOpenReviewForm: setOpenReviewForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), !reviewed && /*#__PURE__*/_jsxDEV(AddReview, {\n            coffee: coffee,\n            openReviewForm: openReviewForm,\n            setOpenReviewForm: setOpenReviewForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Coffee, \"2HJn2zgLQHdZsTomZZjKR7wszRg=\", false, function () {\n  return [useParams];\n});\n\n_c = Coffee;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coffee\");","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffee-id/Coffee.jsx"],"names":["useParams","useContext","useState","useEffect","DataContext","UserContext","Details","Cafe","ReviewList","AddReview","getReviewsForCoffee","getFavouritesForCoffee","isLiked","isReviewed","classes","Coffee","props","params","coffeeId","Number","id","addFavourite","deleteFavourite","state","coffees","reviews","favourites","coffee","coffeeReviews","setCoffeeReviews","Object","values","coffeeFavourites","prev","user","userId","reviewed","setReviewed","openReviewForm","setOpenReviewForm","cafeData","setCafeData"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,OAHF,EAIEC,UAJF,QAKO,yBALP;AAMA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAMkB,QAAQ,GAAGC,MAAM,CAACF,MAAM,CAACG,EAAR,CAAvB;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCN,KAA1C,CAHoC,CAKpC;;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYtB,UAAU,CAACG,WAAD,CAA5B;AAEA,QAAMoB,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,OAAO,GAAGF,KAAK,CAACE,OAAtB;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB,CAVoC,CAYpC;;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACN,QAAD,CAAtB,CAboC,CAepC;;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAChDQ,mBAAmB,CAACoB,MAAM,CAACC,MAAP,CAAcN,OAAd,CAAD,EAAyBP,QAAzB,CAD6B,CAAlD;AAGA,QAAMc,gBAAgB,GAAGrB,sBAAsB,CAC7CmB,MAAM,CAACC,MAAP,CAAcL,UAAd,CAD6C,EAE7CR,QAF6C,CAA/C,CAnBoC,CAwBpC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,gBAAgB,CAAEI,IAAD,IACfvB,mBAAmB,CAACoB,MAAM,CAACC,MAAP,CAAcN,OAAd,CAAD,EAAyBP,QAAzB,CADL,CAAhB;AAGD,GAJQ,EAIN,CAACO,OAAD,EAAUP,QAAV,CAJM,CAAT,CAzBoC,CA+BpC;;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAWjC,UAAU,CAACI,WAAD,CAA3B;AACA,QAAM8B,MAAM,GAAGD,IAAI,GAAGA,IAAI,CAACd,EAAR,GAAa,IAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,WAAW,CAAEJ,IAAD,IAAUpB,UAAU,CAACe,aAAD,EAAgBO,MAAhB,CAArB,CAAX;AACD,GAFQ,EAEN,CAACP,aAAD,EAAgBO,MAAhB,CAFM,CAAT,CApCoC,CAwCpC;;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,KAAD,CAApD,CAzCoC,CA2CpC;;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,IAAD,CAAxC;AAEA,sBACE;AAAA,cACGyB,MAAM,iBACL;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,OAAO,EAAEC,aAFX;AAGE,QAAA,UAAU,EAAEI,gBAHd;AAIE,QAAA,YAAY,EAAEX,YAJhB;AAKE,QAAA,eAAe,EAAEC,eALnB;AAME,QAAA,OAAO,EAAEV;AANX;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAEE,OAAO,CAAC,qBAAD,CAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEA,OAAO,CAAC,uBAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAE0B,QADZ;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,MAAM,EAAEd;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAmBE;AAAK,QAAA,SAAS,EAAEb,OAAO,CAAC,uBAAD,CAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEA,OAAO,CAAC,uBAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAEA,OAAO,CAAC,uBAAD,CAAvB;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,QAAQ,EAAEI,QADZ;AAEE,YAAA,MAAM,EAAES,MAFV;AAGE,YAAA,cAAc,EAAEW,cAHlB;AAIE,YAAA,iBAAiB,EAAEC;AAJrB;AAAA;AAAA;AAAA;AAAA,kBADF,EAOG,CAACH,QAAD,iBACC,QAAC,SAAD;AACE,YAAA,MAAM,EAAET,MADV;AAEE,YAAA,cAAc,EAAEW,cAFlB;AAGE,YAAA,iBAAiB,EAAEC;AAHrB;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GA5FuBxB,M;UACPf,S;;;KADOe,M","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport DataContext from \"../../contexts/DataContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Details from \"./Details\";\nimport Cafe from \"./Cafe\";\nimport ReviewList from \"./ReviewList\";\nimport AddReview from \"./AddReview\";\nimport {\n  getReviewsForCoffee,\n  getFavouritesForCoffee,\n  isLiked,\n  isReviewed,\n} from \"../../helpers/selectors\";\nimport classes from \"./Coffee.module.scss\";\n\nexport default function Coffee(props) {\n  const params = useParams();\n  const coffeeId = Number(params.id);\n  const { addFavourite, deleteFavourite } = props;\n\n  // get all data\n  const { state } = useContext(DataContext);\n\n  const coffees = state.coffees;\n  const reviews = state.reviews;\n  const favourites = state.favourites;\n\n  // filter for specific coffee details\n  const coffee = coffees[coffeeId];\n\n  // filter for coffee reviews & favourites\n  const [coffeeReviews, setCoffeeReviews] = useState(\n    getReviewsForCoffee(Object.values(reviews), coffeeId)\n  );\n  const coffeeFavourites = getFavouritesForCoffee(\n    Object.values(favourites),\n    coffeeId\n  );\n\n  // change state everytime a review is added or deleted\n  useEffect(() => {\n    setCoffeeReviews((prev) =>\n      getReviewsForCoffee(Object.values(reviews), coffeeId)\n    );\n  }, [reviews, coffeeId]);\n\n  // check if coffee is already reviewed by user\n  const { user } = useContext(UserContext);\n  const userId = user ? user.id : null;\n  const [reviewed, setReviewed] = useState(false);\n\n  useEffect(() => {\n    setReviewed((prev) => isReviewed(coffeeReviews, userId));\n  }, [coffeeReviews, userId]);\n\n  // review form logic\n  const [openReviewForm, setOpenReviewForm] = useState(false);\n\n  // cafe logic to be passed as props\n  const [cafeData, setCafeData] = useState(null);\n\n  return (\n    <div>\n      {coffee && (\n        <>\n          <Details\n            coffee={coffee}\n            reviews={coffeeReviews}\n            favourites={coffeeFavourites}\n            addFavourite={addFavourite}\n            deleteFavourite={deleteFavourite}\n            isLiked={isLiked}\n          />\n          <div className={classes[\"coffee-cafe-section\"]}>\n            <h1 className={classes[\"coffee-review-heading\"]}>\n              Featured Cafe for this Coffee\n            </h1>\n            <Cafe\n              cafeData={cafeData}\n              setCafeData={setCafeData}\n              coffee={coffee}\n            />\n          </div>\n          <div className={classes[\"coffee-review-wrapper\"]}>\n            <h1 className={classes[\"coffee-review-heading\"]}>\n              Community Reviews\n            </h1>\n            <div className={classes[\"coffee-review-section\"]}>\n              <ReviewList\n                coffeeId={coffeeId}\n                coffee={coffee}\n                openReviewForm={openReviewForm}\n                setOpenReviewForm={setOpenReviewForm}\n              />\n              {!reviewed && (\n                <AddReview\n                  coffee={coffee}\n                  openReviewForm={openReviewForm}\n                  setOpenReviewForm={setOpenReviewForm}\n                />\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}