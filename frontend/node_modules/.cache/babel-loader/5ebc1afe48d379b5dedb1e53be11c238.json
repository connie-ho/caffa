{"ast":null,"code":"import _toConsumableArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useContext,useEffect}from\"react\";import{Route,Switch}from\"react-router-dom\";import DataContext from\"../../contexts/DataContext\";import Coffee from\"../coffee-id/Coffee\";import CoffeeList from\"./CoffeeList\";import SortFilterDrawer from\"./SortFilterDrawer\";import Footer from\"../Footer\";import{formatRegions,getFilteredCoffees,hasSelectedFilters}from\"../../helpers/selectors\";// styles\nimport classes from\"./Coffees.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Coffees(props){var _useContext=useContext(DataContext),state=_useContext.state;var regions=Object.values(state.regions);var coffees=Object.values(state.coffees);// Define categories to filter for\nvar categories={grain_species:{name:\"Grain Species\",items:{1:{id:1,type:\"Arabica\"},2:{id:2,type:\"Robusta\"}}},acidity:{name:\"Acidity\",items:{3:{id:3,type:\"Low\"},4:{id:4,type:\"Low-Medium\"},5:{id:5,type:\"Medium\"},6:{id:6,type:\"Medium-High\"},7:{id:7,type:\"High\"}}},roast:{name:\"Roast\",items:{8:{id:8,type:\"Light\"},9:{id:9,type:\"Medium\"},10:{id:10,type:\"Dark\"}}},region:{name:\"Region\",items:formatRegions(regions,11)}};// Define sorting choices\nvar sortOptions={1:\"Recommended\",2:\"Name: A - Z\",3:\"Name: Z - A\",4:\"Rating: Low to High\",5:\"Rating: High to Low\"};// FilterArray to apply to coffees\nvar _useState=useState({region:[],grain_species:[],acidity:[],roast:[]}),_useState2=_slicedToArray(_useState,2),filters=_useState2[0],setFilters=_useState2[1];var _useState3=useState(coffees),_useState4=_slicedToArray(_useState3,2),filteredCoffees=_useState4[0],setFilteredCoffees=_useState4[1];var _useState5=useState(hasSelectedFilters(filters)),_useState6=_slicedToArray(_useState5,2),hasFilters=_useState6[0],setHasFilters=_useState6[1];useEffect(function(){var newHasFilters=hasSelectedFilters(filters);if(!newHasFilters){setFilteredCoffees(function(prev){return Object.values(state.coffees);});}setHasFilters(function(prev){return newHasFilters;});},[hasFilters,state.coffees,filters]);var handleFilters=function handleFilters(filters){// pass in a copy of the filters\nvar copyFilters=_objectSpread({},filters);var res=getFilteredCoffees(coffees,categories,copyFilters);setFilteredCoffees(function(prev){return res;});// if there are no filters selected, display all\nvar newHasFilters=hasSelectedFilters(filters);if(!newHasFilters){setFilteredCoffees(function(prev){return coffees;});}setHasFilters(function(prev){return newHasFilters;});};// sorts coffees by key\nvar handleSort=function handleSort(sortOption){if(!sortOption||!filteredCoffees.length){return;}var newFilteredCoffees=filteredCoffees.sort(function(a,b){if(sortOption===\"Recommended\"){return a.id-b.id;}if(sortOption===\"Name: A - Z\"){if(a.name.toLowerCase()<b.name.toLowerCase()){return-1;}if(a.name.toLowerCase()>b.name.toLowerCase()){return 1;}return 0;}if(sortOption===\"Name: Z - A\"){if(a.name.toLowerCase()<b.name.toLowerCase()){return 1;}if(a.name.toLowerCase()>b.name.toLowerCase()){return-1;}return 0;}if(sortOption===\"Rating: Low to High\"){return a.avg_rating-b.avg_rating;}if(sortOption===\"Rating: High to Low\"){return b.avg_rating-a.avg_rating;}return a.id-b.id;//default\n});setFilteredCoffees(function(prev){return _toConsumableArray(newFilteredCoffees);});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsxs(Route,{path:\"/coffees/:id\",children:[/*#__PURE__*/_jsx(Coffee,{}),/*#__PURE__*/_jsx(Footer,{})]}),/*#__PURE__*/_jsx(Route,{path:\"/coffees\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes[\"coffees-page\"],children:[/*#__PURE__*/_jsx(SortFilterDrawer,{sortOptions:sortOptions,handleSort:handleSort,categories:categories,filters:filters,setFilters:setFilters,handleFilters:handleFilters}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",display:\"flex\",flexDirection:\"column\",minHeight:\"90vh\"},children:[!filteredCoffees.length&&/*#__PURE__*/_jsx(\"p\",{className:classes[\"no-results\"],children:\"There doesn't seem to be any results, try our image search instead!\"}),/*#__PURE__*/_jsx(CoffeeList,{coffees:filteredCoffees}),/*#__PURE__*/_jsx(Footer,{})]})]})})]})});}export default Coffees;","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/Coffees.jsx"],"names":["useState","useContext","useEffect","Route","Switch","DataContext","Coffee","CoffeeList","SortFilterDrawer","Footer","formatRegions","getFilteredCoffees","hasSelectedFilters","classes","Coffees","props","state","regions","Object","values","coffees","categories","grain_species","name","items","id","type","acidity","roast","region","sortOptions","filters","setFilters","filteredCoffees","setFilteredCoffees","hasFilters","setHasFilters","newHasFilters","prev","handleFilters","copyFilters","res","handleSort","sortOption","length","newFilteredCoffees","sort","a","b","toLowerCase","avg_rating","width","display","flexDirection","minHeight"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DataContext from \"../../contexts/DataContext\";\nimport Coffee from \"../coffee-id/Coffee\";\nimport CoffeeList from \"./CoffeeList\";\nimport SortFilterDrawer from \"./SortFilterDrawer\";\n\nimport Footer from \"../Footer\";\nimport {\n  formatRegions,\n  getFilteredCoffees,\n  hasSelectedFilters,\n} from \"../../helpers/selectors\";\n\n// styles\nimport classes from \"./Coffees.module.scss\";\n\nfunction Coffees(props) {\n  const { state } = useContext(DataContext);\n  const regions = Object.values(state.regions);\n  const coffees = Object.values(state.coffees);\n\n  // Define categories to filter for\n  const categories = {\n    grain_species: {\n      name: \"Grain Species\",\n      items: { 1: { id: 1, type: \"Arabica\" }, 2: { id: 2, type: \"Robusta\" } },\n    },\n    acidity: {\n      name: \"Acidity\",\n      items: {\n        3: { id: 3, type: \"Low\" },\n        4: { id: 4, type: \"Low-Medium\" },\n        5: { id: 5, type: \"Medium\" },\n        6: { id: 6, type: \"Medium-High\" },\n        7: { id: 7, type: \"High\" },\n      },\n    },\n    roast: {\n      name: \"Roast\",\n      items: {\n        8: { id: 8, type: \"Light\" },\n        9: { id: 9, type: \"Medium\" },\n        10: { id: 10, type: \"Dark\" },\n      },\n    },\n    region: {\n      name: \"Region\",\n      items: formatRegions(regions, 11),\n    },\n  };\n  // Define sorting choices\n  const sortOptions = {\n    1: \"Recommended\",\n    2: \"Name: A - Z\",\n    3: \"Name: Z - A\",\n    4: \"Rating: Low to High\",\n    5: \"Rating: High to Low\",\n  };\n\n  // FilterArray to apply to coffees\n  const [filters, setFilters] = useState({\n    region: [],\n    grain_species: [],\n    acidity: [],\n    roast: [],\n  });\n  const [filteredCoffees, setFilteredCoffees] = useState(coffees);\n  const [hasFilters, setHasFilters] = useState(hasSelectedFilters(filters));\n\n  useEffect(() => {\n    const newHasFilters = hasSelectedFilters(filters);\n    if (!newHasFilters) {\n      setFilteredCoffees((prev) => Object.values(state.coffees));\n    }\n    setHasFilters((prev) => newHasFilters);\n  }, [hasFilters, state.coffees, filters]);\n\n  const handleFilters = (filters) => {\n    // pass in a copy of the filters\n    const copyFilters = { ...filters };\n    const res = getFilteredCoffees(coffees, categories, copyFilters);\n    setFilteredCoffees((prev) => res);\n\n    // if there are no filters selected, display all\n    const newHasFilters = hasSelectedFilters(filters);\n    if (!newHasFilters) {\n      setFilteredCoffees((prev) => coffees);\n    }\n\n    setHasFilters((prev) => newHasFilters);\n  };\n\n  // sorts coffees by key\n  const handleSort = (sortOption) => {\n    if (!sortOption || !filteredCoffees.length) {\n      return;\n    }\n\n    const newFilteredCoffees = filteredCoffees.sort((a, b) => {\n      if (sortOption === \"Recommended\") {\n        return a.id - b.id;\n      }\n\n      if (sortOption === \"Name: A - Z\") {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        }\n\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n\n        return 0;\n      }\n\n      if (sortOption === \"Name: Z - A\") {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return 1;\n        }\n\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n\n        return 0;\n      }\n\n      if (sortOption === \"Rating: Low to High\") {\n        return a.avg_rating - b.avg_rating;\n      }\n\n      if (sortOption === \"Rating: High to Low\") {\n        return b.avg_rating - a.avg_rating;\n      }\n\n      return a.id - b.id; //default\n    });\n\n    setFilteredCoffees((prev) => [...newFilteredCoffees]);\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/coffees/:id\">\n          <Coffee />\n          <Footer />\n        </Route>\n        <Route path=\"/coffees\">\n          <div className={classes[\"coffees-page\"]}>\n            <SortFilterDrawer\n              sortOptions={sortOptions}\n              handleSort={handleSort}\n              categories={categories}\n              filters={filters}\n              setFilters={setFilters}\n              handleFilters={handleFilters}\n            />\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                minHeight: \"90vh\",\n              }}\n            >\n              {!filteredCoffees.length && (\n                <p className={classes[\"no-results\"]}>\n                  There doesn't seem to be any results, try our image search\n                  instead!\n                </p>\n              )}\n              <CoffeeList coffees={filteredCoffees} />\n              <Footer />\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Coffees;\n"]},"metadata":{},"sourceType":"module"}