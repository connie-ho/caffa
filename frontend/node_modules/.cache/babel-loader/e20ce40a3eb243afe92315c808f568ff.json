{"ast":null,"code":"import _slicedToArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Route,Switch}from\"react-router-dom\";import{useState}from\"react\";import CoffeeListItem from\"./CoffeeListItem\";import Paginations from\"./Pagination\";// external styles\nimport{Grid}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CoffeeList=function CoffeeList(props){var coffees=props.coffees;// Pagination Logic\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(9),_useState4=_slicedToArray(_useState3,2),coffeesPerPage=_useState4[0],setCoffeesPerPage=_useState4[1];var indexOfLastCoffee=currentPage*coffeesPerPage;var indexOfFirstCoffee=indexOfLastCoffee-coffeesPerPage;var currentCoffees=coffees.slice(indexOfFirstCoffee,indexOfLastCoffee);// Create Coffee List Item\nvar coffeeList=currentCoffees.map(function(coffee){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,md:6,lg:4,style:{padding:\"1.5em 1.5em\"},children:/*#__PURE__*/_jsx(CoffeeListItem,{coffee:coffee},coffee.id)});});return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/coffees/:id\"}),/*#__PURE__*/_jsx(Route,{path:\"/coffees\",children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,direction:\"row\",style:{marginTop:\"5rem\",minHeight:\"80vh\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:0,sm:1}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:10,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:\"0\",children:[coffeeList,/*#__PURE__*/_jsx(Grid,{container:true,xs:12,justify:\"center\",children:/*#__PURE__*/_jsx(Paginations,{page:currentPage,setPage:setCurrentPage,coffeesPerPage:coffeesPerPage,totalCoffees:coffees.length})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:0,sm:1})]})})]});};export default CoffeeList;","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/CoffeeList.jsx"],"names":["Route","Switch","useState","CoffeeListItem","Paginations","Grid","CoffeeList","props","coffees","currentPage","setCurrentPage","coffeesPerPage","setCoffeesPerPage","indexOfLastCoffee","indexOfFirstCoffee","currentCoffees","slice","coffeeList","map","coffee","padding","id","marginTop","minHeight","length"],"mappings":"yKAAA,OAASA,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA;AACA,OAASC,IAAT,KAAqB,mBAArB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IACpBC,CAAAA,OADoB,CACRD,KADQ,CACpBC,OADoB,CAG5B;AAH4B,cAIUN,QAAQ,CAAC,CAAD,CAJlB,wCAIrBO,WAJqB,eAIRC,cAJQ,8BAKgBR,QAAQ,CAAC,CAAD,CALxB,yCAKrBS,cALqB,eAKLC,iBALK,eAO5B,GAAMC,CAAAA,iBAAiB,CAAGJ,WAAW,CAAGE,cAAxC,CACA,GAAMG,CAAAA,kBAAkB,CAAGD,iBAAiB,CAAGF,cAA/C,CACA,GAAMI,CAAAA,cAAc,CAAGP,OAAO,CAACQ,KAAR,CAAcF,kBAAd,CAAkCD,iBAAlC,CAAvB,CAEA;AACA,GAAMI,CAAAA,UAAU,CAAGF,cAAc,CAACG,GAAf,CAAmB,SAACC,MAAD,CAAY,CAChD,mBACE,KAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,EAFN,CAGE,EAAE,CAAE,CAHN,CAIE,EAAE,CAAE,CAJN,CAKE,EAAE,CAAE,CALN,CAME,KAAK,CAAE,CAAEC,OAAO,CAAE,aAAX,CANT,uBAQE,KAAC,cAAD,EAAgC,MAAM,CAAED,MAAxC,EAAqBA,MAAM,CAACE,EAA5B,CARF,EADF,CAYD,CAbkB,CAAnB,CAeA,mBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,uBACE,MAAC,IAAD,EACE,IAAI,KADN,CAEE,SAAS,KAFX,CAGE,SAAS,CAAC,KAHZ,CAIE,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAqBC,SAAS,CAAE,MAAhC,CAJT,wBAME,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,CAAtB,EANF,cAOE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,EAAvB,uBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,GAAxB,WACGN,UADH,cAEE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,EAAE,CAAE,EAApB,CAAwB,OAAO,CAAC,QAAhC,uBACE,KAAC,WAAD,EACE,IAAI,CAAER,WADR,CAEE,OAAO,CAAEC,cAFX,CAGE,cAAc,CAAEC,cAHlB,CAIE,YAAY,CAAEH,OAAO,CAACgB,MAJxB,EADF,EAFF,GADF,EAPF,cAoBE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,CAAtB,EApBF,GADF,EAFF,GADF,CA6BD,CAxDD,CA0DA,cAAelB,CAAAA,UAAf","sourcesContent":["import { Route, Switch } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport CoffeeListItem from \"./CoffeeListItem\";\nimport Paginations from \"./Pagination\";\n\n// external styles\nimport { Grid } from \"@material-ui/core\";\n\nconst CoffeeList = (props) => {\n  const { coffees } = props;\n\n  // Pagination Logic\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coffeesPerPage, setCoffeesPerPage] = useState(9);\n\n  const indexOfLastCoffee = currentPage * coffeesPerPage;\n  const indexOfFirstCoffee = indexOfLastCoffee - coffeesPerPage;\n  const currentCoffees = coffees.slice(indexOfFirstCoffee, indexOfLastCoffee);\n\n  // Create Coffee List Item\n  const coffeeList = currentCoffees.map((coffee) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={6}\n        lg={4}\n        style={{ padding: \"1.5em 1.5em\" }}\n      >\n        <CoffeeListItem key={coffee.id} coffee={coffee} />\n      </Grid>\n    );\n  });\n\n  return (\n    <Switch>\n      <Route path=\"/coffees/:id\"></Route>\n      <Route path=\"/coffees\">\n        <Grid\n          item\n          container\n          direction=\"row\"\n          style={{ marginTop: \"5rem\", minHeight: \"80vh\" }}\n        >\n          <Grid item xs={0} sm={1} />\n          <Grid item xs={12} sm={10}>\n            <Grid container spacing=\"0\">\n              {coffeeList}\n              <Grid container xs={12} justify=\"center\">\n                <Paginations\n                  page={currentPage}\n                  setPage={setCurrentPage}\n                  coffeesPerPage={coffeesPerPage}\n                  totalCoffees={coffees.length}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={0} sm={1} />\n        </Grid>\n      </Route>\n    </Switch>\n  );\n};\n\nexport default CoffeeList;\n"]},"metadata":{},"sourceType":"module"}