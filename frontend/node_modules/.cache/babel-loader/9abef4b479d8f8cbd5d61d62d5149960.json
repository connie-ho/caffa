{"ast":null,"code":"import _defineProperty from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import React from\"react\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import{makeStyles}from\"@material-ui/core/styles\";import TextField from\"@material-ui/core/TextField\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:500,\"& > * + *\":{marginTop:theme.spacing(3)},maxHeight:\"10rem\",overflow:\"auto\"},textField:{\"& .MuiChip-root\":{backgroundColor:theme.palette.primary.main,color:\"white\"},\"& .MuiSvgIcon-root\":{color:\"white\"}}};});export default function RegionSearch(props){var classes=useStyles();var filters=props.filters,setFilters=props.setFilters,handleFilters=props.handleFilters,regions=props.regions;var category=\"region\";var handleChange=function handleChange(event,value){var newCategory=[];var _iterator=_createForOfIteratorHelper(value),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var val=_step.value;newCategory.push(val.id);}}catch(err){_iterator.e(err);}finally{_iterator.f();}var newFilter=_objectSpread(_objectSpread({},filters),{},_defineProperty({},category,newCategory));setFilters(function(prev){return newFilter;});handleFilters(newFilter);};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"tags-outlined\",options:regions,getOptionLabel:function getOptionLabel(option){return option.type;},getOptionSelected:function getOptionSelected(option,value){return option.type===value.type;},defaultValue:[],filterSelectedOptions:true,onChange:function onChange(event,value){return handleChange(event,value);},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{variant:\"outlined\",placeholder:\"Regions\",className:classes.textField}));}})});}","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/RegionSearch.jsx"],"names":["React","Autocomplete","makeStyles","TextField","useStyles","theme","root","width","marginTop","spacing","maxHeight","overflow","textField","backgroundColor","palette","primary","main","color","RegionSearch","props","classes","filters","setFilters","handleFilters","regions","category","handleChange","event","value","newCategory","val","push","id","newFilter","prev","option","type","params"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAACG,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,KAAK,CAAE,GADH,CAEJ,YAAa,CACXC,SAAS,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADA,CAFT,CAKJC,SAAS,CAAE,OALP,CAMJC,QAAQ,CAAE,MANN,CADiC,CASvCC,SAAS,CAAE,CACT,kBAAmB,CACjBC,eAAe,CAAER,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC,IADtB,CAEjBC,KAAK,CAAE,OAFU,CADV,CAKT,qBAAsB,CACpBA,KAAK,CAAE,OADa,CALb,CAT4B,CAAZ,EAAD,CAA5B,CAoBA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC1C,GAAMC,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CAD0C,GAElCiB,CAAAA,OAFkC,CAEcF,KAFd,CAElCE,OAFkC,CAEzBC,UAFyB,CAEcH,KAFd,CAEzBG,UAFyB,CAEbC,aAFa,CAEcJ,KAFd,CAEbI,aAFa,CAEEC,OAFF,CAEcL,KAFd,CAEEK,OAFF,CAG1C,GAAMC,CAAAA,QAAQ,CAAG,QAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACrC,GAAMC,CAAAA,WAAW,CAAG,EAApB,CADqC,yCAEnBD,KAFmB,YAErC,+CAAyB,IAAdE,CAAAA,GAAc,aACvBD,WAAW,CAACE,IAAZ,CAAiBD,GAAG,CAACE,EAArB,EACD,CAJoC,qDAMrC,GAAMC,CAAAA,SAAS,gCACVZ,OADU,wBAEZI,QAFY,CAEDI,WAFC,EAAf,CAIAP,UAAU,CAAC,SAACY,IAAD,QAAUD,CAAAA,SAAV,EAAD,CAAV,CACAV,aAAa,CAACU,SAAD,CAAb,CACD,CAZD,CAcA,mBACE,YAAK,SAAS,CAAEb,OAAO,CAACd,IAAxB,uBACE,KAAC,YAAD,EACE,QAAQ,KADV,CAEE,EAAE,CAAC,eAFL,CAGE,OAAO,CAAEkB,OAHX,CAIE,cAAc,CAAE,wBAACW,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAnB,EAJlB,CAKE,iBAAiB,CAAE,2BAACD,MAAD,CAASP,KAAT,QAAmBO,CAAAA,MAAM,CAACC,IAAP,GAAgBR,KAAK,CAACQ,IAAzC,EALrB,CAME,YAAY,CAAE,EANhB,CAOE,qBAAqB,CAAE,IAPzB,CAQE,QAAQ,CAAE,kBAACT,KAAD,CAAQC,KAAR,QAAkBF,CAAAA,YAAY,CAACC,KAAD,CAAQC,KAAR,CAA9B,EARZ,CASE,WAAW,CAAE,qBAACS,MAAD,qBACX,KAAC,SAAD,gCACMA,MADN,MAEE,OAAO,CAAC,UAFV,CAGE,WAAW,CAAC,SAHd,CAIE,SAAS,CAAEjB,OAAO,CAACR,SAJrB,GADW,EATf,EADF,EADF,CAsBD","sourcesContent":["import React from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n    \"& > * + *\": {\n      marginTop: theme.spacing(3),\n    },\n    maxHeight: \"10rem\",\n    overflow: \"auto\",\n  },\n  textField: {\n    \"& .MuiChip-root\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n    \"& .MuiSvgIcon-root\": {\n      color: \"white\",\n    },\n  },\n}));\n\nexport default function RegionSearch(props) {\n  const classes = useStyles();\n  const { filters, setFilters, handleFilters, regions } = props;\n  const category = \"region\";\n\n  const handleChange = (event, value) => {\n    const newCategory = [];\n    for (const val of value) {\n      newCategory.push(val.id);\n    }\n\n    const newFilter = {\n      ...filters,\n      [category]: newCategory,\n    };\n    setFilters((prev) => newFilter);\n    handleFilters(newFilter);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={regions}\n        getOptionLabel={(option) => option.type}\n        getOptionSelected={(option, value) => option.type === value.type}\n        defaultValue={[]}\n        filterSelectedOptions={true}\n        onChange={(event, value) => handleChange(event, value)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            placeholder=\"Regions\"\n            className={classes.textField}\n          />\n        )}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}