{"ast":null,"code":"import _slicedToArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddCircleOutlineOutlinedIcon from\"@material-ui/icons/AddCircleOutlineOutlined\";import\"./UploadForm.scss\";import{makeStyles}from\"@material-ui/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UploadForm=function UploadForm(props){var file=props.file,setFile=props.setFile,error=props.error,setError=props.setError;var useClasses=makeStyles(function(){return{AddHoverColor:{\"&:hover\":{background:\"white\",color:\"#f7bc2c\"}},transform:{transform:\"translate(0px, 6rem)\",color:\"#3d3a3a\"}};});var classes=useClasses();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),tempURL=_useState2[0],setTempURL=_useState2[1];var types=[\"image/png\",\"image/jpeg\"];var changeHandler=function changeHandler(e){var selected=e.target.files[0];if(selected&&types.includes(selected.type)){setFile(selected);setTempURL(URL.createObjectURL(e.target.files[0]));setError(\"\");}else{setFile(null);setError(\"Please select an image file(png or jpeg)\");}};return/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"file-upload\",children:[!tempURL&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",capture:true,onChange:changeHandler}),/*#__PURE__*/_jsx(AddCircleOutlineOutlinedIcon,{color:\"primary\",className:classes.transform,classes:{root:classes.AddHoverColor},fontSize:\"large\"})]}),file&&/*#__PURE__*/_jsx(\"div\",{className:\"output\",children:tempURL&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",capture:true,onChange:changeHandler}),/*#__PURE__*/_jsx(\"img\",{src:tempURL,alt:\"cafe\",width:\"200\",height:\"200\"}),\" \"]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]})});};export default UploadForm;","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/image-search/UploadForm.js"],"names":["React","useState","AddCircleOutlineOutlinedIcon","makeStyles","UploadForm","props","file","setFile","error","setError","useClasses","AddHoverColor","background","color","transform","classes","tempURL","setTempURL","types","changeHandler","e","selected","target","files","includes","type","URL","createObjectURL","root"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,4BAAP,KAAyC,6CAAzC,CACA,MAAO,mBAAP,CACA,OAASC,UAAT,KAA2B,qBAA3B,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IACpBC,CAAAA,IADoB,CACeD,KADf,CACpBC,IADoB,CACdC,OADc,CACeF,KADf,CACdE,OADc,CACLC,KADK,CACeH,KADf,CACLG,KADK,CACEC,QADF,CACeJ,KADf,CACEI,QADF,CAG5B,GAAMC,CAAAA,UAAU,CAAGP,UAAU,CAAC,iBAAO,CACnCQ,aAAa,CAAE,CACb,UAAW,CACTC,UAAU,CAAE,OADH,CAETC,KAAK,CAAE,SAFE,CADE,CADoB,CAOnCC,SAAS,CAAE,CACTA,SAAS,uBADA,CAETD,KAAK,CAAE,SAFE,CAPwB,CAAP,EAAD,CAA7B,CAaA,GAAME,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CAhB4B,cAkBET,QAAQ,CAAC,EAAD,CAlBV,wCAkBrBe,OAlBqB,eAkBZC,UAlBY,eAmB5B,GAAMC,CAAAA,KAAK,CAAG,CAAC,WAAD,CAAc,YAAd,CAAd,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3B,GAAIC,CAAAA,QAAQ,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CAEA,GAAIF,QAAQ,EAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,CAA+C,CAC7ClB,OAAO,CAACc,QAAD,CAAP,CACAJ,UAAU,CAACS,GAAG,CAACC,eAAJ,CAAoBP,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAV,CACAd,QAAQ,CAAC,EAAD,CAAR,CACD,CAJD,IAIO,CACLF,OAAO,CAAC,IAAD,CAAP,CACAE,QAAQ,CAAC,0CAAD,CAAR,CACD,CACF,CAXD,CAaA,mBACE,mCACE,eAAO,SAAS,CAAC,aAAjB,WACG,CAACO,OAAD,eACC,wCACE,cACE,IAAI,CAAC,MADP,CAEE,MAAM,CAAC,SAFT,CAGE,OAAO,KAHT,CAIE,QAAQ,CAAEG,aAJZ,EADF,cAOE,KAAC,4BAAD,EACE,KAAK,CAAC,SADR,CAEE,SAAS,CAAEJ,OAAO,CAACD,SAFrB,CAGE,OAAO,CAAE,CAAEc,IAAI,CAAEb,OAAO,CAACJ,aAAhB,CAHX,CAIE,QAAQ,CAAC,OAJX,EAPF,GAFJ,CAiBGL,IAAI,eACH,YAAK,SAAS,CAAC,QAAf,UACGU,OAAO,eACN,wCACE,cACE,IAAI,CAAC,MADP,CAEE,MAAM,CAAC,SAFT,CAGE,OAAO,KAHT,CAIE,QAAQ,CAAEG,aAJZ,EADF,cAOE,YAAK,GAAG,CAAEH,OAAV,CAAmB,GAAG,CAAC,MAAvB,CAA8B,KAAK,CAAC,KAApC,CAA0C,MAAM,CAAC,KAAjD,EAPF,CAO4D,GAP5D,GAFJ,EAlBJ,CAgCGR,KAAK,eAAI,YAAK,SAAS,CAAC,OAAf,UAAwBA,KAAxB,EAhCZ,GADF,EADF,CAsCD,CAxED,CA0EA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport \"./UploadForm.scss\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst UploadForm = (props) => {\n  const { file, setFile, error, setError } = props;\n\n  const useClasses = makeStyles(() => ({\n    AddHoverColor: {\n      \"&:hover\": {\n        background: \"white\",\n        color: \"#f7bc2c\",\n      },\n    },\n    transform: {\n      transform: `translate(0px, 6rem)`,\n      color: \"#3d3a3a\",\n    },\n  }));\n\n  const classes = useClasses();\n\n  const [tempURL, setTempURL] = useState(\"\");\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setTempURL(URL.createObjectURL(e.target.files[0]));\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file(png or jpeg)\");\n    }\n  };\n\n  return (\n    <form>\n      <label className=\"file-upload\">\n        {!tempURL && (\n          <>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              capture\n              onChange={changeHandler}\n            />\n            <AddCircleOutlineOutlinedIcon\n              color=\"primary\"\n              className={classes.transform}\n              classes={{ root: classes.AddHoverColor }}\n              fontSize=\"large\"\n            />\n          </>\n        )}\n        {file && (\n          <div className=\"output\">\n            {tempURL && (\n              <>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  capture\n                  onChange={changeHandler}\n                />\n                <img src={tempURL} alt=\"cafe\" width=\"200\" height=\"200\" />{\" \"}\n              </>\n            )}\n          </div>\n        )}\n        {error && <div className=\"error\">{error}</div>}\n      </label>\n    </form>\n  );\n};\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}