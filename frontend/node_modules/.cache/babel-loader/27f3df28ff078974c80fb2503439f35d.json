{"ast":null,"code":"import _slicedToArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{GoogleMap,LoadScript,Marker,InfoWindow}from\"@react-google-maps/api\";import classes from\"./Coffee.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MapContainer(props){var name=props.name,latitude=props.latitude,longitude=props.longitude,distance=props.distance;var locations=[{name:name,location:{lat:latitude,lng:longitude},distance:distance}];var mapStyles={width:\"100%\",flex:1};var defaultCenter={lat:latitude,lng:longitude};var _useState=useState({}),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var onSelect=function onSelect(item){setSelected(item);};return/*#__PURE__*/_jsx(LoadScript,{googleMapsApiKey:process.env.REACT_APP_GOOGLE_API_KEY,children:/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:mapStyles,zoom:13,center:defaultCenter,children:[locations.map(function(item){return/*#__PURE__*/_jsx(Marker,{position:item.location,onClick:function onClick(){return onSelect(item);}},item.name);}),selected.location&&/*#__PURE__*/_jsx(InfoWindow,{position:selected.location,clickable:true,onCloseClick:function onCloseClick(){return setSelected({});},children:/*#__PURE__*/_jsxs(\"p\",{className:classes[\"map-info\"],children:[selected.name,\" is \",selected.distance,\" km away from you!\",\" \"]})})]})});}export default MapContainer;","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffee-id/MapContainer.jsx"],"names":["useState","GoogleMap","LoadScript","Marker","InfoWindow","classes","MapContainer","props","name","latitude","longitude","distance","locations","location","lat","lng","mapStyles","width","flex","defaultCenter","selected","setSelected","onSelect","item","process","env","REACT_APP_GOOGLE_API_KEY","map"],"mappings":"yKAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OACEC,SADF,CAEEC,UAFF,CAGEC,MAHF,CAIEC,UAJF,KAKO,wBALP,CAMA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,IACnBC,CAAAA,IADmB,CACqBD,KADrB,CACnBC,IADmB,CACbC,QADa,CACqBF,KADrB,CACbE,QADa,CACHC,SADG,CACqBH,KADrB,CACHG,SADG,CACQC,QADR,CACqBJ,KADrB,CACQI,QADR,CAG3B,GAAMC,CAAAA,SAAS,CAAG,CAChB,CACEJ,IAAI,CAAEA,IADR,CAEEK,QAAQ,CAAE,CACRC,GAAG,CAAEL,QADG,CAERM,GAAG,CAAEL,SAFG,CAFZ,CAMEC,QAAQ,CAAEA,QANZ,CADgB,CAAlB,CAWA,GAAMK,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,MADS,CAEhBC,IAAI,CAAE,CAFU,CAAlB,CAKA,GAAMC,CAAAA,aAAa,CAAG,CACpBL,GAAG,CAAEL,QADe,CAEpBM,GAAG,CAAEL,SAFe,CAAtB,CAnB2B,cAwBKV,QAAQ,CAAC,EAAD,CAxBb,wCAwBpBoB,QAxBoB,eAwBVC,WAxBU,eA0B3B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACzBF,WAAW,CAACE,IAAD,CAAX,CACD,CAFD,CAIA,mBACE,KAAC,UAAD,EAAY,gBAAgB,CAAEC,OAAO,CAACC,GAAR,CAAYC,wBAA1C,uBACE,MAAC,SAAD,EAAW,iBAAiB,CAAEV,SAA9B,CAAyC,IAAI,CAAE,EAA/C,CAAmD,MAAM,CAAEG,aAA3D,WACGP,SAAS,CAACe,GAAV,CAAc,SAACJ,IAAD,CAAU,CACvB,mBACE,KAAC,MAAD,EAEE,QAAQ,CAAEA,IAAI,CAACV,QAFjB,CAGE,OAAO,CAAE,yBAAMS,CAAAA,QAAQ,CAACC,IAAD,CAAd,EAHX,EACOA,IAAI,CAACf,IADZ,CADF,CAOD,CARA,CADH,CAUGY,QAAQ,CAACP,QAAT,eACC,KAAC,UAAD,EACE,QAAQ,CAAEO,QAAQ,CAACP,QADrB,CAEE,SAAS,CAAE,IAFb,CAGE,YAAY,CAAE,8BAAMQ,CAAAA,WAAW,CAAC,EAAD,CAAjB,EAHhB,uBAKE,WAAG,SAAS,CAAEhB,OAAO,CAAC,UAAD,CAArB,WACGe,QAAQ,CAACZ,IADZ,QACsBY,QAAQ,CAACT,QAD/B,sBAC2D,GAD3D,GALF,EAXJ,GADF,EADF,CA0BD,CAED,cAAeL,CAAAA,YAAf","sourcesContent":["import { useState } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport classes from \"./Coffee.module.scss\";\n\nfunction MapContainer(props) {\n  const { name, latitude, longitude, distance } = props;\n\n  const locations = [\n    {\n      name: name,\n      location: {\n        lat: latitude,\n        lng: longitude,\n      },\n      distance: distance,\n    },\n  ];\n\n  const mapStyles = {\n    width: \"100%\",\n    flex: 1,\n  };\n\n  const defaultCenter = {\n    lat: latitude,\n    lng: longitude,\n  };\n\n  const [selected, setSelected] = useState({});\n\n  const onSelect = (item) => {\n    setSelected(item);\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_API_KEY}>\n      <GoogleMap mapContainerStyle={mapStyles} zoom={13} center={defaultCenter}>\n        {locations.map((item) => {\n          return (\n            <Marker\n              key={item.name}\n              position={item.location}\n              onClick={() => onSelect(item)}\n            />\n          );\n        })}\n        {selected.location && (\n          <InfoWindow\n            position={selected.location}\n            clickable={true}\n            onCloseClick={() => setSelected({})}\n          >\n            <p className={classes[\"map-info\"]}>\n              {selected.name} is {selected.distance} km away from you!{\" \"}\n            </p>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}