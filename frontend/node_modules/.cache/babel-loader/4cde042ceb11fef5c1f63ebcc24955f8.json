{"ast":null,"code":"var _jsxFileName = \"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/image-search/UploadForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport \"./UploadForm.scss\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadForm = props => {\n  _s();\n\n  const {\n    file,\n    setFile,\n    error,\n    setError\n  } = props;\n  const useClasses = makeStyles(() => ({\n    AddHoverColor: {\n      \"&:hover\": {\n        background: \"white\",\n        color: \"#f7bc2c\"\n      }\n    },\n    transform: {\n      transform: `translate(0px, 6rem)`,\n      color: \"#3d3a3a\"\n    }\n  }));\n  const classes = useClasses();\n  const [tempURL, setTempURL] = useState(\"\");\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setTempURL(URL.createObjectURL(e.target.files[0]));\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file(png or jpeg)\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"file-upload\",\n      children: [!tempURL && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          capture: true,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlinedIcon, {\n          color: \"primary\",\n          className: classes.transform,\n          classes: {\n            root: classes.AddHoverColor\n          },\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: tempURL && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            capture: true,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tempURL,\n            alt: \"cafe\",\n            width: \"200\",\n            height: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadForm, \"CEdUUBdTEA1cdwPJhFaJmYLnLuI=\", true);\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/image-search/UploadForm.js"],"names":["React","useState","AddCircleOutlineOutlinedIcon","makeStyles","UploadForm","props","file","setFile","error","setError","useClasses","AddHoverColor","background","color","transform","classes","tempURL","setTempURL","types","changeHandler","e","selected","target","files","includes","type","URL","createObjectURL","root"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport \"./UploadForm.scss\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst UploadForm = (props) => {\n  const { file, setFile, error, setError } = props;\n\n  const useClasses = makeStyles(() => ({\n    AddHoverColor: {\n      \"&:hover\": {\n        background: \"white\",\n        color: \"#f7bc2c\",\n      },\n    },\n    transform: {\n      transform: `translate(0px, 6rem)`,\n      color: \"#3d3a3a\",\n    },\n  }));\n\n  const classes = useClasses();\n\n  const [tempURL, setTempURL] = useState(\"\");\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setTempURL(URL.createObjectURL(e.target.files[0]));\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file(png or jpeg)\");\n    }\n  };\n\n  return (\n    <form>\n      <label className=\"file-upload\">\n        {!tempURL && (\n          <>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              capture\n              onChange={changeHandler}\n            />\n            <AddCircleOutlineOutlinedIcon\n              color=\"primary\"\n              className={classes.transform}\n              classes={{ root: classes.AddHoverColor }}\n              fontSize=\"large\"\n            />\n          </>\n        )}\n        {file && (\n          <div className=\"output\">\n            {tempURL && (\n              <>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  capture\n                  onChange={changeHandler}\n                />\n                <img src={tempURL} alt=\"cafe\" width=\"200\" height=\"200\" />{\" \"}\n              </>\n            )}\n          </div>\n        )}\n        {error && <div className=\"error\">{error}</div>}\n      </label>\n    </form>\n  );\n};\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}