{"ast":null,"code":"import _defineProperty from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import Checkbox from\"@material-ui/core/Checkbox\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FilterListCategory(props){var item=props.item,filters=props.filters,setFilters=props.setFilters,handleFilters=props.handleFilters,category=props.category;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var handleChange=function handleChange(event,value){var currIndex=filters[category].indexOf(value);//checks if filter is already applied\nvar newCategory=_toConsumableArray(filters[category]);// initalize new state\nif(currIndex===-1){newCategory.push(value);// if not already in array, add\n}else{newCategory.splice(currIndex,1);// remove if in the array\n}var newFilter=_objectSpread(_objectSpread({},filters),{},_defineProperty({},category,newCategory));setFilters(function(prev){return newFilter;});setChecked(event.target.checked);handleFilters(newFilter);};return/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsx(Checkbox,{checked:checked,onChange:function onChange(e){handleChange(e,item.id);},color:\"primary\",inputProps:{\"aria-label\":\"primary checkbox\"}}),/*#__PURE__*/_jsx(ListItemText,{primary:item.type})]});}","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/FilterListCategoryItem.jsx"],"names":["useState","ListItem","ListItemText","Checkbox","FilterListCategory","props","item","filters","setFilters","handleFilters","category","checked","setChecked","handleChange","event","value","currIndex","indexOf","newCategory","push","splice","newFilter","prev","target","e","id","type"],"mappings":"6qBAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,C,wFAEA,cAAe,SAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,IACxCC,CAAAA,IADwC,CACeD,KADf,CACxCC,IADwC,CAClCC,OADkC,CACeF,KADf,CAClCE,OADkC,CACzBC,UADyB,CACeH,KADf,CACzBG,UADyB,CACbC,aADa,CACeJ,KADf,CACbI,aADa,CACEC,QADF,CACeL,KADf,CACEK,QADF,eAGlBV,QAAQ,CAAC,KAAD,CAHU,wCAGzCW,OAHyC,eAGhCC,UAHgC,eAKhD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACrC,GAAMC,CAAAA,SAAS,CAAGT,OAAO,CAACG,QAAD,CAAP,CAAkBO,OAAlB,CAA0BF,KAA1B,CAAlB,CAAoD;AACpD,GAAMG,CAAAA,WAAW,oBAAOX,OAAO,CAACG,QAAD,CAAd,CAAjB,CAA4C;AAE5C,GAAIM,SAAS,GAAK,CAAC,CAAnB,CAAsB,CACpBE,WAAW,CAACC,IAAZ,CAAiBJ,KAAjB,EAAyB;AAC1B,CAFD,IAEO,CACLG,WAAW,CAACE,MAAZ,CAAmBJ,SAAnB,CAA8B,CAA9B,EAAkC;AACnC,CAED,GAAMK,CAAAA,SAAS,gCACVd,OADU,wBAEZG,QAFY,CAEDQ,WAFC,EAAf,CAKAV,UAAU,CAAC,SAACc,IAAD,QAAUD,CAAAA,SAAV,EAAD,CAAV,CACAT,UAAU,CAACE,KAAK,CAACS,MAAN,CAAaZ,OAAd,CAAV,CACAF,aAAa,CAACY,SAAD,CAAb,CACD,CAlBD,CAoBA,mBACE,MAAC,QAAD,EAAU,MAAM,KAAhB,wBACE,KAAC,QAAD,EACE,OAAO,CAAEV,OADX,CAEE,QAAQ,CAAE,kBAACa,CAAD,CAAO,CACfX,YAAY,CAACW,CAAD,CAAIlB,IAAI,CAACmB,EAAT,CAAZ,CACD,CAJH,CAKE,KAAK,CAAC,SALR,CAME,UAAU,CAAE,CAAE,aAAc,kBAAhB,CANd,EADF,cASE,KAAC,YAAD,EAAc,OAAO,CAAEnB,IAAI,CAACoB,IAA5B,EATF,GADF,CAaD","sourcesContent":["import { useState } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport default function FilterListCategory(props) {\n  const { item, filters, setFilters, handleFilters, category } = props;\n\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = (event, value) => {\n    const currIndex = filters[category].indexOf(value); //checks if filter is already applied\n    const newCategory = [...filters[category]]; // initalize new state\n\n    if (currIndex === -1) {\n      newCategory.push(value); // if not already in array, add\n    } else {\n      newCategory.splice(currIndex, 1); // remove if in the array\n    }\n\n    const newFilter = {\n      ...filters,\n      [category]: newCategory,\n    };\n\n    setFilters((prev) => newFilter);\n    setChecked(event.target.checked);\n    handleFilters(newFilter);\n  };\n\n  return (\n    <ListItem button>\n      <Checkbox\n        checked={checked}\n        onChange={(e) => {\n          handleChange(e, item.id);\n        }}\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <ListItemText primary={item.type} />\n    </ListItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}