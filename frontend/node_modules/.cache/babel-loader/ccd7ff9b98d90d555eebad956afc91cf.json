{"ast":null,"code":"var _jsxFileName = \"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/home/Carousel/CoffeeCarousel.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useContext } from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport CoffeeListItemCarousel from \"../Carousel/CoffeeListItemCarousel\";\nimport { getReviewsForCoffee, avgRatingForCoffee } from \"../../../helpers/selectors\";\nimport DataContext from \"../../../contexts/DataContext\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./CarouselTest.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoffeeCarousel = props => {\n  _s();\n\n  const {\n    state\n  } = useContext(DataContext);\n  const {\n    homeCoffees,\n    type\n  } = props;\n  const reviews = state.reviews;\n  const coffees = Object.values(homeCoffees);\n  const breakPoints = [{\n    width: 1,\n    itemsToShow: 1,\n    itemsToScroll: 1,\n    pagination: false\n  }, {\n    width: 500,\n    itemsToShow: 2,\n    itemsToScroll: 1,\n    pagination: true\n  }, {\n    width: 1000,\n    itemsToShow: 3,\n    itemsToScroll: 1,\n    pagination: true\n  }, {\n    width: 1300,\n    itemsToShow: 4,\n    itemsToScroll: 2,\n    pagination: true\n  }, {\n    width: 1600,\n    itemsToShow: 5,\n    itemsToScroll: 2,\n    pagination: true\n  }];\n  const FavoritesCoffeeList = coffees.map(coffee => {\n    const coffeeReviews = getReviewsForCoffee(Object.values(reviews), coffee.id);\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CoffeeListItemCarousel, {\n        coffee: coffee,\n        avgRating: avgRating\n      }, coffee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  const MostReviewedCoffeeList = Object.values(state.coffees).sort((a, b) => {\n    return b.avg_rating - a.avg_rating;\n  });\n  const SlicedCoffeeList = MostReviewedCoffeeList.slice(0, 6).map(coffee => {\n    const coffeeReviews = getReviewsForCoffee(Object.values(reviews), coffee.id);\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CoffeeListItemCarousel, {\n        coffee: coffee,\n        avgRating: avgRating\n      }, coffee.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  });\n\n  if (type === \"favorite\") {\n    return /*#__PURE__*/_jsxDEV(Carousel, {\n      itemPadding: [30, 10],\n      breakPoints: breakPoints,\n      children: FavoritesCoffeeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  } else if (type === \"rating\") {\n    return /*#__PURE__*/_jsxDEV(Carousel, {\n      itemPadding: [30, 10],\n      breakPoints: breakPoints,\n      children: SlicedCoffeeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CoffeeCarousel, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c = CoffeeCarousel;\nexport default CoffeeCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoffeeCarousel\");","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/home/Carousel/CoffeeCarousel.jsx"],"names":["React","useContext","Carousel","CoffeeListItemCarousel","getReviewsForCoffee","avgRatingForCoffee","DataContext","Grid","CoffeeCarousel","props","state","homeCoffees","type","reviews","coffees","Object","values","breakPoints","width","itemsToShow","itemsToScroll","pagination","FavoritesCoffeeList","map","coffee","coffeeReviews","id","avgRating","MostReviewedCoffeeList","sort","a","b","avg_rating","SlicedCoffeeList","slice","name"],"mappings":"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","sourcesContent":["import { React, useContext } from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport CoffeeListItemCarousel from \"../Carousel/CoffeeListItemCarousel\";\nimport {\n  getReviewsForCoffee,\n  avgRatingForCoffee,\n} from \"../../../helpers/selectors\";\nimport DataContext from \"../../../contexts/DataContext\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./CarouselTest.scss\";\n\nconst CoffeeCarousel = (props) => {\n  const { state } = useContext(DataContext);\n  const { homeCoffees, type } = props;\n  const reviews = state.reviews;\n\n  const coffees = Object.values(homeCoffees);\n  const breakPoints = [\n    { width: 1, itemsToShow: 1, itemsToScroll: 1, pagination: false },\n    { width: 500, itemsToShow: 2, itemsToScroll: 1, pagination: true },\n    { width: 1000, itemsToShow: 3, itemsToScroll: 1, pagination: true },\n    { width: 1300, itemsToShow: 4, itemsToScroll: 2, pagination: true },\n    { width: 1600, itemsToShow: 5, itemsToScroll: 2, pagination: true },\n  ];\n\n  const FavoritesCoffeeList = coffees.map((coffee) => {\n    const coffeeReviews = getReviewsForCoffee(\n      Object.values(reviews),\n      coffee.id\n    );\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return (\n      <Grid item xs={12}>\n        <CoffeeListItemCarousel\n          key={coffee.id}\n          coffee={coffee}\n          avgRating={avgRating}\n        />\n      </Grid>\n    );\n  });\n\n  const MostReviewedCoffeeList = Object.values(state.coffees).sort((a, b) => {\n    return b.avg_rating - a.avg_rating;\n  });\n\n  const SlicedCoffeeList = MostReviewedCoffeeList.slice(0, 6).map((coffee) => {\n    const coffeeReviews = getReviewsForCoffee(\n      Object.values(reviews),\n      coffee.id\n    );\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return (\n      <Grid item xs={12}>\n        <CoffeeListItemCarousel\n          key={coffee.name}\n          coffee={coffee}\n          avgRating={avgRating}\n        />\n      </Grid>\n    );\n  });\n\n  if (type === \"favorite\") {\n    return (\n      <Carousel itemPadding={[30, 10]} breakPoints={breakPoints}>\n        {FavoritesCoffeeList}\n      </Carousel>\n    );\n  } else if (type === \"rating\") {\n    return (\n      <Carousel itemPadding={[30, 10]} breakPoints={breakPoints}>\n        {SlicedCoffeeList}\n      </Carousel>\n    );\n  }\n};\n\nexport default CoffeeCarousel;\n"]},"metadata":{},"sourceType":"module"}