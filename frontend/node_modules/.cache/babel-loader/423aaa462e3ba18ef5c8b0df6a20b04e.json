{"ast":null,"code":"var _jsxFileName = \"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/my-account/AccountFavourites.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport DataContext from \"../../contexts/DataContext.js\";\nimport UserContext from \"../../contexts/UserContext.js\";\nimport CoffeeListItem from \"../coffees/CoffeeListItem.jsx\";\nimport { getFavouritesForUser, userFavCoffees } from \"../../helpers/selectors\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountFavourites(props) {\n  _s();\n\n  const {\n    state\n  } = useContext(DataContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    classes,\n    limit\n  } = props;\n  const coffees = state.coffees;\n  const [values, setValues] = useState({\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    setValues(prev => ({ ...prev,\n      id: user ? user.id : \"\",\n      first_name: user ? user.first_name : \"\",\n      last_name: user ? user.last_name : \"\",\n      email: user ? user.email : \"\"\n    }));\n  }, [user]);\n  const favourites = Object.values(state.favourites);\n  const Faves = getFavouritesForUser(favourites, values.id);\n  const favCoffees = Object.values(Faves).sort((a, b) => {\n    return new Date(b.created_at) - new Date(a.created_at);\n  });\n  const slicedFav = favCoffees.slice(0, limit);\n  const userCoffees = userFavCoffees(slicedFav, coffees); // Create Coffee List Item\n\n  const coffeeList = userCoffees.map(coffee => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 3,\n      style: {\n        padding: \"1.5em 1.5em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CoffeeListItem, {\n        coffee: coffee\n      }, coffee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    xs: 12,\n    style: {\n      marginTop: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 10,\n      children: [coffeeList, !coffeeList.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no favourites here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), limit ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      style: {\n        justifyContent: \"flex-start\",\n        marginTop: \"4.5em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.seeMoreBtn,\n        href: \"/account/favourites\",\n        variant: \"contained\",\n        color: \"primary\",\n        disableElevation: true,\n        children: \"SEE MORE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountFavourites, \"I+2M0yb9ZtX7VGBZLrqZ1AaRMR0=\");\n\n_c = AccountFavourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountFavourites\");","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/my-account/AccountFavourites.jsx"],"names":["useContext","useEffect","useState","DataContext","UserContext","CoffeeListItem","getFavouritesForUser","userFavCoffees","Grid","Button","AccountFavourites","props","state","user","classes","limit","coffees","values","setValues","id","first_name","last_name","email","prev","favourites","Object","Faves","favCoffees","sort","a","b","Date","created_at","slicedFav","slice","userCoffees","coffeeList","map","coffee","padding","marginTop","length","justifyContent","seeMoreBtn"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,yBAArD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAYZ,UAAU,CAACG,WAAD,CAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWb,UAAU,CAACI,WAAD,CAA3B;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBJ,KAA3B;AACA,QAAMK,OAAO,GAAGJ,KAAK,CAACI,OAAtB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC;AACnCiB,IAAAA,EAAE,EAAE,EAD+B;AAEnCC,IAAAA,UAAU,EAAE,EAFuB;AAGnCC,IAAAA,SAAS,EAAE,EAHwB;AAInCC,IAAAA,KAAK,EAAE;AAJ4B,GAAD,CAApC;AAOArB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAAEK,IAAD,KAAW,EACnB,GAAGA,IADgB;AAEnBJ,MAAAA,EAAE,EAAEN,IAAI,GAAGA,IAAI,CAACM,EAAR,GAAa,EAFF;AAGnBC,MAAAA,UAAU,EAAEP,IAAI,GAAGA,IAAI,CAACO,UAAR,GAAqB,EAHlB;AAInBC,MAAAA,SAAS,EAAER,IAAI,GAAGA,IAAI,CAACQ,SAAR,GAAoB,EAJhB;AAKnBC,MAAAA,KAAK,EAAET,IAAI,GAAGA,IAAI,CAACS,KAAR,GAAgB;AALR,KAAX,CAAD,CAAT;AAOD,GARQ,EAQN,CAACT,IAAD,CARM,CAAT;AAUA,QAAMW,UAAU,GAAGC,MAAM,CAACR,MAAP,CAAcL,KAAK,CAACY,UAApB,CAAnB;AACA,QAAME,KAAK,GAAGpB,oBAAoB,CAACkB,UAAD,EAAaP,MAAM,CAACE,EAApB,CAAlC;AACA,QAAMQ,UAAU,GAAGF,MAAM,CAACR,MAAP,CAAcS,KAAd,EAAqBE,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrD,WAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,IAAyB,IAAID,IAAJ,CAASF,CAAC,CAACG,UAAX,CAAhC;AACD,GAFkB,CAAnB;AAIA,QAAMC,SAAS,GAAGN,UAAU,CAACO,KAAX,CAAiB,CAAjB,EAAoBnB,KAApB,CAAlB;AACA,QAAMoB,WAAW,GAAG5B,cAAc,CAAC0B,SAAD,EAAYjB,OAAZ,CAAlC,CA9B+C,CAgC/C;;AACA,QAAMoB,UAAU,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,MAAD,IAAY;AAC7C,wBACE,QAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,EAAE,EAAE,CALN;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OANT;AAAA,6BAQE,QAAC,cAAD;AAAgC,QAAA,MAAM,EAAED;AAAxC,SAAqBA,MAAM,CAACnB,EAA5B;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbkB,CAAnB;AAeA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,KAAK,EAAE;AAAEqB,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,EAAzB;AAAA,iBACGJ,UADH,EAEG,CAACA,UAAU,CAACK,MAAZ,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKG1B,KAAK,gBACJ,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,cAAc,EAAE,YAAlB;AAAgCF,QAAAA,SAAS,EAAE;AAA3C,OAHT;AAAA,6BAKE,QAAC,MAAD;AACE,QAAA,SAAS,EAAE1B,OAAO,CAAC6B,UADrB;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,gBAAgB,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADI,GAgBF,IArBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzEuBjC,iB;;KAAAA,iB","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport DataContext from \"../../contexts/DataContext.js\";\nimport UserContext from \"../../contexts/UserContext.js\";\nimport CoffeeListItem from \"../coffees/CoffeeListItem.jsx\";\nimport { getFavouritesForUser, userFavCoffees } from \"../../helpers/selectors\";\nimport { Grid, Button } from \"@material-ui/core\";\n\nexport default function AccountFavourites(props) {\n  const { state } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const { classes, limit } = props;\n  const coffees = state.coffees;\n\n  const [values, setValues] = useState({\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n  });\n\n  useEffect(() => {\n    setValues((prev) => ({\n      ...prev,\n      id: user ? user.id : \"\",\n      first_name: user ? user.first_name : \"\",\n      last_name: user ? user.last_name : \"\",\n      email: user ? user.email : \"\",\n    }));\n  }, [user]);\n\n  const favourites = Object.values(state.favourites);\n  const Faves = getFavouritesForUser(favourites, values.id);\n  const favCoffees = Object.values(Faves).sort((a, b) => {\n    return new Date(b.created_at) - new Date(a.created_at);\n  });\n\n  const slicedFav = favCoffees.slice(0, limit);\n  const userCoffees = userFavCoffees(slicedFav, coffees);\n\n  // Create Coffee List Item\n  const coffeeList = userCoffees.map((coffee) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={6}\n        lg={3}\n        style={{ padding: \"1.5em 1.5em\" }}\n      >\n        <CoffeeListItem key={coffee.id} coffee={coffee} />\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container xs={12} style={{ marginTop: \"2rem\" }}>\n      <Grid container spacing={10}>\n        {coffeeList}\n        {!coffeeList.length && <p>There are no favourites here!</p>}\n      </Grid>\n      {limit ? (\n        <Grid\n          container\n          xs={12}\n          style={{ justifyContent: \"flex-start\", marginTop: \"4.5em\" }}\n        >\n          <Button\n            className={classes.seeMoreBtn}\n            href=\"/account/favourites\"\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n          >\n            SEE MORE\n          </Button>\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}