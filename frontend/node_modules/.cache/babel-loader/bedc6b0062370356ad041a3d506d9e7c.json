{"ast":null,"code":"import{React,useContext}from\"react\";import Carousel from\"react-elastic-carousel\";import CoffeeListItemCarousel from\"../Carousel/CoffeeListItemCarousel\";import{getReviewsForCoffee,avgRatingForCoffee}from\"../../../helpers/selectors\";import DataContext from\"../../../contexts/DataContext\";import{Grid}from\"@material-ui/core\";import\"./CarouselTest.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var CoffeeCarousel=function CoffeeCarousel(props){var _useContext=useContext(DataContext),state=_useContext.state;var homeCoffees=props.homeCoffees,type=props.type;var reviews=state.reviews;var coffees=Object.values(homeCoffees);var breakPoints=[{width:1,itemsToShow:1,itemsToScroll:1,pagination:false},{width:500,itemsToShow:2,itemsToScroll:1,pagination:true},{width:1000,itemsToShow:3,itemsToScroll:1,pagination:true},{width:1300,itemsToShow:4,itemsToScroll:2,pagination:true},{width:1600,itemsToShow:5,itemsToScroll:2,pagination:true}];var FavoritesCoffeeList=coffees.map(function(coffee){var coffeeReviews=getReviewsForCoffee(Object.values(reviews),coffee.id);var avgRating=avgRatingForCoffee(coffeeReviews);return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(CoffeeListItemCarousel,{coffee:coffee,avgRating:avgRating},coffee.id)});});var MostReviewedCoffeeList=Object.values(state.coffees).sort(function(a,b){return b.avg_rating-a.avg_rating;});var SlicedCoffeeList=MostReviewedCoffeeList.slice(0,6).map(function(coffee){var coffeeReviews=getReviewsForCoffee(Object.values(reviews),coffee.id);var avgRating=avgRatingForCoffee(coffeeReviews);return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(CoffeeListItemCarousel,{coffee:coffee,avgRating:avgRating},coffee.name)});});if(type===\"favorite\"){return/*#__PURE__*/_jsx(Carousel,{itemPadding:[30,10],breakPoints:breakPoints,children:FavoritesCoffeeList});}else if(type===\"rating\"){return/*#__PURE__*/_jsx(Carousel,{itemPadding:[30,10],breakPoints:breakPoints,children:SlicedCoffeeList});}};export default CoffeeCarousel;","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/home/Carousel/CoffeeCarousel.jsx"],"names":["React","useContext","Carousel","CoffeeListItemCarousel","getReviewsForCoffee","avgRatingForCoffee","DataContext","Grid","CoffeeCarousel","props","state","homeCoffees","type","reviews","coffees","Object","values","breakPoints","width","itemsToShow","itemsToScroll","pagination","FavoritesCoffeeList","map","coffee","coffeeReviews","id","avgRating","MostReviewedCoffeeList","sort","a","b","avg_rating","SlicedCoffeeList","slice","name"],"mappings":"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","sourcesContent":["import { React, useContext } from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport CoffeeListItemCarousel from \"../Carousel/CoffeeListItemCarousel\";\nimport {\n  getReviewsForCoffee,\n  avgRatingForCoffee,\n} from \"../../../helpers/selectors\";\nimport DataContext from \"../../../contexts/DataContext\";\nimport { Grid } from \"@material-ui/core\";\nimport \"./CarouselTest.scss\";\n\nconst CoffeeCarousel = (props) => {\n  const { state } = useContext(DataContext);\n  const { homeCoffees, type } = props;\n  const reviews = state.reviews;\n\n  const coffees = Object.values(homeCoffees);\n  const breakPoints = [\n    { width: 1, itemsToShow: 1, itemsToScroll: 1, pagination: false },\n    { width: 500, itemsToShow: 2, itemsToScroll: 1, pagination: true },\n    { width: 1000, itemsToShow: 3, itemsToScroll: 1, pagination: true },\n    { width: 1300, itemsToShow: 4, itemsToScroll: 2, pagination: true },\n    { width: 1600, itemsToShow: 5, itemsToScroll: 2, pagination: true },\n  ];\n\n  const FavoritesCoffeeList = coffees.map((coffee) => {\n    const coffeeReviews = getReviewsForCoffee(\n      Object.values(reviews),\n      coffee.id\n    );\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return (\n      <Grid item xs={12}>\n        <CoffeeListItemCarousel\n          key={coffee.id}\n          coffee={coffee}\n          avgRating={avgRating}\n        />\n      </Grid>\n    );\n  });\n\n  const MostReviewedCoffeeList = Object.values(state.coffees).sort((a, b) => {\n    return b.avg_rating - a.avg_rating;\n  });\n\n  const SlicedCoffeeList = MostReviewedCoffeeList.slice(0, 6).map((coffee) => {\n    const coffeeReviews = getReviewsForCoffee(\n      Object.values(reviews),\n      coffee.id\n    );\n    const avgRating = avgRatingForCoffee(coffeeReviews);\n    return (\n      <Grid item xs={12}>\n        <CoffeeListItemCarousel\n          key={coffee.name}\n          coffee={coffee}\n          avgRating={avgRating}\n        />\n      </Grid>\n    );\n  });\n\n  if (type === \"favorite\") {\n    return (\n      <Carousel itemPadding={[30, 10]} breakPoints={breakPoints}>\n        {FavoritesCoffeeList}\n      </Carousel>\n    );\n  } else if (type === \"rating\") {\n    return (\n      <Carousel itemPadding={[30, 10]} breakPoints={breakPoints}>\n        {SlicedCoffeeList}\n      </Carousel>\n    );\n  }\n};\n\nexport default CoffeeCarousel;\n"]},"metadata":{},"sourceType":"module"}