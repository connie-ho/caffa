{"ast":null,"code":"var _jsxFileName = \"/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/FilterListCategoryItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterListCategory(props) {\n  _s();\n\n  const {\n    item,\n    filters,\n    setFilters,\n    handleFilters,\n    category\n  } = props;\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = (event, value) => {\n    const currIndex = filters[category].indexOf(value); //checks if filter is already applied\n\n    const newCategory = [...filters[category]]; // initalize new state\n\n    if (currIndex === -1) {\n      newCategory.push(value); // if not already in array, add\n    } else {\n      newCategory.splice(currIndex, 1); // remove if in the array\n    }\n\n    const newFilter = { ...filters,\n      [category]: newCategory\n    };\n    setFilters(prev => newFilter);\n    setChecked(event.target.checked);\n    handleFilters(newFilter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: e => {\n        handleChange(e, item.id);\n      },\n      color: \"primary\",\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: item.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterListCategory, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n\n_c = FilterListCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterListCategory\");","map":{"version":3,"sources":["/home/kevin/lighthouse/caffa-deploy/caffa/frontend/src/components/coffees/FilterListCategoryItem.jsx"],"names":["useState","ListItem","ListItemText","Checkbox","FilterListCategory","props","item","filters","setFilters","handleFilters","category","checked","setChecked","handleChange","event","value","currIndex","indexOf","newCategory","push","splice","newFilter","prev","target","e","id","type"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAChD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA;AAA5C,MAAyDL,KAA/D;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,UAAMC,SAAS,GAAGT,OAAO,CAACG,QAAD,CAAP,CAAkBO,OAAlB,CAA0BF,KAA1B,CAAlB,CADqC,CACe;;AACpD,UAAMG,WAAW,GAAG,CAAC,GAAGX,OAAO,CAACG,QAAD,CAAX,CAApB,CAFqC,CAEO;;AAE5C,QAAIM,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpBE,MAAAA,WAAW,CAACC,IAAZ,CAAiBJ,KAAjB,EADoB,CACK;AAC1B,KAFD,MAEO;AACLG,MAAAA,WAAW,CAACE,MAAZ,CAAmBJ,SAAnB,EAA8B,CAA9B,EADK,CAC6B;AACnC;;AAED,UAAMK,SAAS,GAAG,EAChB,GAAGd,OADa;AAEhB,OAACG,QAAD,GAAYQ;AAFI,KAAlB;AAKAV,IAAAA,UAAU,CAAEc,IAAD,IAAUD,SAAX,CAAV;AACAT,IAAAA,UAAU,CAACE,KAAK,CAACS,MAAN,CAAaZ,OAAd,CAAV;AACAF,IAAAA,aAAa,CAACY,SAAD,CAAb;AACD,GAlBD;;AAoBA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,QAAQ,EAAGa,CAAD,IAAO;AACfX,QAAAA,YAAY,CAACW,CAAD,EAAIlB,IAAI,CAACmB,EAAT,CAAZ;AACD,OAJH;AAKE,MAAA,KAAK,EAAC,SALR;AAME,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB;AANd;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEnB,IAAI,CAACoB;AAA5B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtCuBtB,kB;;KAAAA,kB","sourcesContent":["import { useState } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport default function FilterListCategory(props) {\n  const { item, filters, setFilters, handleFilters, category } = props;\n\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = (event, value) => {\n    const currIndex = filters[category].indexOf(value); //checks if filter is already applied\n    const newCategory = [...filters[category]]; // initalize new state\n\n    if (currIndex === -1) {\n      newCategory.push(value); // if not already in array, add\n    } else {\n      newCategory.splice(currIndex, 1); // remove if in the array\n    }\n\n    const newFilter = {\n      ...filters,\n      [category]: newCategory,\n    };\n\n    setFilters((prev) => newFilter);\n    setChecked(event.target.checked);\n    handleFilters(newFilter);\n  };\n\n  return (\n    <ListItem button>\n      <Checkbox\n        checked={checked}\n        onChange={(e) => {\n          handleChange(e, item.id);\n        }}\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <ListItemText primary={item.type} />\n    </ListItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}